# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Micro-Frontend Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
#   job1:
#     name: "Profile Job"
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [12.x]

#     steps:
#     - uses: actions/checkout@v2

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: run-npm-ci
#       working-directory: ./profile
#       run: npm ci
#     - name: run-npm-build
#       working-directory: ./profile
#       run: npm run build --if-present
#     - name: Deploy to S3 Profile
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --acl public-read --delete
#       env:
#         AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: ${{ secrets.AWS_REGION }}
#         SOURCE_DIR: "./profile/dist/profile"

#   job2:
#     name: "Metrics Job"
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [12.x]

#     steps:
#     - uses: actions/checkout@v2

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: run-npm-ci
#       working-directory: ./react-charts
#       run: npm ci
#     - name: run-npm-build
#       working-directory: ./react-charts
#       run: npm run build --if-present
#     - name: Deploy to S3 Charts
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --acl public-read --delete
#       env:
#         AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME_REACT }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: ${{ secrets.AWS_REGION }}
#         SOURCE_DIR: "./react-charts/build"

  job3:
    name: "Parent App Job"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: run-npm-ci
      working-directory: ./parent
      run: npm ci
    - name: run-npm-build
      working-directory: ./parent
      run: npm run build --if-present
    
    - name: Generate deployment package
      working-directory: ./parent
      run: zip -r deploy.zip * -x "**node_modules**"

    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

    - name: Beanstalk Deploy for app
      uses: einaregilsson/beanstalk-deploy@v10
      with:
        aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        application_name: "developer-portfolio"
        environment_name: "DeveloperPortfolio-env"
        region: "ap-south-1"
        version_label: "micro-frontend-github-dashboard-${{ steps.format-time.outputs.replaced }}"
        deployment_package: ./parent/deploy.zip

    - name: Deployed!
      run: echo App deployed to ELB


